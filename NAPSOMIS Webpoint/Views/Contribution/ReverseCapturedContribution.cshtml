@model NAPSOMIS_Webpoint.ViewModels.ReverseCapturedContributionViewModel

@using NAPSOMIS_Webpoint.ViewModels

@{
    ViewBag.Title = "Reverse Captured Contribution";
}
<br />

<div class="col-md-1" style="background-color:white; font-size:small;">
    <br />
    <img src="~/Content/Images/view-refresh-8.png" style= "width:60px; height:50px; padding-left:10px;" />
    <br />
</div>

<div class="col-md-10" style="background-color:white; font-size:small;">

    <text style="color:midnightblue; padding-left:10px; font-size:large;">Reverse Captured Contribution Report </text>
    <br />
    <text style="font-size:small; padding-left:10px;">Process a reverse operation on establishment contribution report</text>
    <br />
    <text style="font-size:small; padding-left:10px;">by using the form below</text>
    <br />

</div>

<script type="text/javascript">
    function SelectedIndexChanged(s, e) {

        var thetype = ftype.GetText();

        if (thetype == "Regular") {
            endperiod.SetVisible(false);
            debit.SetVisible(false);
        } else {
            endperiod.SetVisible(true);
            debit.SetVisible(true);
        }
    }

</script>

@using (Html.BeginForm("ReverseCapturedContribution_OK", "Contribution", FormMethod.Post))
    {

    @Html.AntiForgeryToken()
    @Html.DevExpress().FormLayout(setting =>
{
    setting.Name = "receivecrlayout";
    setting.ColCount = 2;

    setting.Items.AddTabbedGroupItem(group =>
    {

        if (ViewBag.Message != null)
            {
            setting.Items.Add(b =>
            {
                b.ShowCaption = DefaultBoolean.False;
                b.Name = "MessageGroup";

                b.NestedExtension().Label(lb =>
                {
                    lb.Name = "lblmessage";
                    lb.Text = ViewBag.Message;
                    lb.ControlStyle.ForeColor = System.Drawing.Color.Red;
                });

            });
 
            setting.Items.AddEmptyItem();

            }

        group.Items.AddGroupItem(group2 =>
        {
            group2.Name = "periodgroup";
            group2.Caption = "Reverse Contribution" ;
            group2.GroupBoxDecoration = GroupBoxDecoration.None;
            group2.ColSpan = 2;
            group2.ColCount = 2;

            group2.Items.AddEmptyItem();
            group2.Items.AddEmptyItem();


            group2.Items.Add(m => m.ferno).NestedExtension().TextBox(b =>
            {
                b.Name = "ferno";

            });

            group2.Items.Add(i =>
            {
                i.Caption = " ";
                i.NestedExtension().Button(b =>
                {
                    b.Name = "cmdloaderno";
                    b.Text = "Load";
                    b.UseSubmitBehavior = true;
                    b.Width = Unit.Pixel(120);
                    b.RouteValues = new { Controller = "Contribution", Action = "ReverseCapturedContribution_LoadERno", ParamValue = "" };
                });

            });

            group2.Items.Add(m => m.establishment).NestedExtension().TextBox(b =>
            {
                b.Name = "establishment";
                b.ReadOnly = true;
                b.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.LightGray;
            });

            group2.Items.Add(b => b.fcat).NestedExtension().ComboBox(b =>
            {

                b.Name = "fcat";

                List<PDCTemplate> myprovinces = (List<PDCTemplate>)TempData.Peek("MyEmployerCategories");

                b.Properties.Columns.Add("Code", "Code", Unit.Pixel(50));
                b.Properties.Columns.Add("Name", "Name", Unit.Pixel(200));

                b.Properties.DataSource = myprovinces;
                b.Properties.TextField = "Name";
                b.Properties.ValueField = "Code";

            });

            group2.Items.Add(m => m.ftype).NestedExtension().ComboBox(b =>
            {

                b.Name = "ftype";
                b.Properties.Items.Add("Regular", "Regular");
                b.Properties.Items.Add("Backpay", "Backpay");

                b.Properties.EnableClientSideAPI = true;
                b.Properties.ClientSideEvents.SelectedIndexChanged = "SelectedIndexChanged";

            });


            group2.Items.AddGroupItem(group3 =>
            {
                group3.Name = "periodgroup";
                group3.Caption = "Periods";
                group3.GroupBoxDecoration = GroupBoxDecoration.Box;
                group3.ColSpan = 2;
                group3.ColCount = 2;

                group3.Items.Add(m => m.beginperiod).NestedExtension().TextBox(b =>
                {
                    b.Name = "beginperiod";

                });


                group3.Items.AddGroupItem(group4 =>
                {
                    group4.Name = "periodgroup";
                    group4.Caption = "Backpay Include Periods";
                    group4.GroupBoxDecoration = GroupBoxDecoration.Box;
                    group4.ColSpan = 2;
                    group4.ColCount = 2;

                    group4.Items.Add(m => m.endperiod).NestedExtension().TextBox(b =>
                    {
                        b.Name = "endperiod";

                    });

                    group4.Items.Add(m => m.debit).NestedExtension().TextBox(b =>
                    {
                        b.Name = "debit";

                    });


                });



            });

            group2.Items.Add(i =>
            {
                i.Caption = " ";
                i.ShowCaption = DefaultBoolean.False;

                i.NestedExtension().Button(b =>
                {
                    b.Name = "cmdprocess";
                    b.Text = "Accept";
                    b.UseSubmitBehavior = true;
                    b.Width = Unit.Pixel(120);
                    b.RouteValues = new { Controller = "Contribution", Action = "ReverseCapturedContribution_OK", ParamValue = "" };

                    if (Model.establishment != null)
                        {
                        b.Enabled = true;
                        }
                    else
                        {
                        b.Enabled = false;
                        }
                });

            });

            group2.Items.Add(i =>
            {
                i.Caption = " ";
                i.ShowCaption = DefaultBoolean.False;

                i.NestedExtension().Button(b =>
                {
                    b.Name = "cmdclear";
                    b.Text = "Clear";
                    b.UseSubmitBehavior = false;
                    b.Width = Unit.Pixel(120);
                    b.RouteValues = new { Controller = "Contribution", Action = "ReverseCapturedContribution", ParamValue = "" };
                });

            });




        });



    });

}).GetHtml()
    }

