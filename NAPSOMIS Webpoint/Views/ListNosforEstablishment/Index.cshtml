@model NAPSOMIS_Webpoint.ViewModels.ListGeneratedEmployerViewModel
@using NAPSOMIS_Webpoint.Models

@{
    ViewBag.Title = "List of Generated Nos. for Establishment";
}

 
<div class="col-md-1" style="background-color:white; font-size:small;">
    <br />
    <img src="~/Content/Images/document_open_8.png" style="width:70px; height:60px; padding-left:10px;" />

</div>

<div class="col-md-11" style="background-color:white; font-size:small;">
    <br />
    <text style="color:midnightblue; padding-left:10px; font-size:large;"> List of Generated Nos. for Establishment </text>
    <br />
    <text style="font-size:small; padding-left:10px;">Please search for generated numbers using the form below</text>

    <br />
    <br />

</div>

@using (Html.BeginForm("Search", "ListNosforEstablishment", FormMethod.Post))
    {
    @Html.DevExpress().FormLayout(settings =>
{

    settings.Name = "searchlayout";
    settings.ColCount = 3;

    settings.ShowItemCaptionColon = true;

    if (ViewBag.Message != null)
        {
        settings.Items.Add(b =>
        {
            b.ShowCaption = DefaultBoolean.False;
            b.Name = "MessageGroup";

            b.NestedExtension().Label(lb =>
            {
                lb.Name = "lblmessage";
                lb.Text = ViewBag.Message;
                lb.ControlStyle.ForeColor = System.Drawing.Color.Red;
            });

        });

        settings.Items.AddEmptyItem();

        }

    settings.Items.AddGroupItem(g =>
    {

        g.Name = "loadgroup";
        g.Caption = "Search";
        g.ColSpan = 3;

        g.Items.Add(b => b.ferno).NestedExtension().TextBox(t =>
        {
            t.Name = "ferno";

            t.Properties.HelpText = "Enter the Employer ERNo here";
            t.Properties.HelpTextSettings.EnablePopupAnimation = true;
            t.Properties.HelpTextSettings.Position = HelpTextPosition.Top;
            t.Properties.HelpTextSettings.DisplayMode = HelpTextDisplayMode.Popup;

        });

    });


    settings.Items.AddGroupItem(g =>
    {
        g.Name = "datesearchgroup";
        g.Caption = "Date Search";
        g.ColSpan = 3;

        g.Items.Add(b => b.StartDate).NestedExtension().DateEdit(d => { d.Name = "StartDate"; d.ReadOnly = false; });
        g.Items.Add(b => b.EndDate).NestedExtension().DateEdit(d => { d.Name = "EndDate"; d.ReadOnly = false; });

        g.Items.Add(bt =>
        {
            bt.Caption = "";

            bt.NestedExtension().Button(b =>
            {
                b.Name = "cmdstartsearch";
                b.Text = "Search";
                b.Width = Unit.Pixel(100);
                b.UseSubmitBehavior = true;
                b.RouteValues = new { Controller = "ListNosforEstablishment", Action = "Search" };

            });

        });

    });

    settings.Items.AddGroupItem(g =>
    {
        g.Name = "displaygroup";
        g.Caption = "Employer Name";
        g.ColSpan = 3;
        g.GroupBoxDecoration = GroupBoxDecoration.Box;
        g.Items.Add(b => b.femp_name).NestedExtension().TextBox(d => { d.Name = "femp_name"; d.ReadOnly = true; d.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.LightGray; });



    });

    settings.Items.AddEmptyItem();


    settings.Items.Add(bt =>
    {
        bt.Caption = "";
        bt.ShowCaption = DefaultBoolean.True;

        bt.NestedExtension().Button(b =>
        {
            b.Name = "cmdprintpreview";
            b.Text = "Print Preview";
            b.Width = Unit.Pixel(100);
            b.UseSubmitBehavior = true;
            b.RouteValues = new { Controller = "ListNosforEstablishment", Action = "PrintPreview" };
            b.Enabled = false;

            if (TempData.Peek("ListGeneratedNos") != null)
                {
                List<mem_tr> nms = (List<mem_tr>)TempData.Peek("ListGeneratedNos");

                if (nms.Count > 0)
                    {
                    b.Enabled = true;
                    } 
                }



        });

    });

}).GetHtml()

    }

@{ 
    if (Model.StartDate != null)
        {

@Html.DevExpress().RoundPanel(settings =>
{
    settings.Name = "panellistmembers";
    settings.HeaderText = "Search Result (List of Members)";
    settings.AllowCollapsingByHeaderClick = true;
    settings.EnableAnimation = true;
    settings.ShowCollapseButton = true;
    settings.Width = Unit.Pixel(250);

    settings.SetContent(() =>
    {
        try
            {

            List<mem_tr> nms = (List<mem_tr>)TempData.Peek("ListGeneratedNos");

            if (nms.Count > 0)
                {

                IEnumerable<mem_tr> memberslist = (IEnumerable<mem_tr>)nms;

                if (memberslist.Count() > 0)
                    {
                    Html.RenderPartial("MembersTableView", memberslist);
                    }

                }

            }

        catch (Exception)
            {

            }

    });
}).GetHtml()


        }
}

