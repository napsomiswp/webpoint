@model NAPSOMIS_Webpoint.ViewModels.CorrectInvalidNosViewModel

@using NAPSOMIS_Webpoint.ViewModels

@{
    ViewBag.Title = "Correct Invalid Numbers";
}
<br />

<div class="col-md-1" style="background-color:white; font-size:small;">
    <br />
    <img src="~/Content/Images/tools-check-spelling-5.png" style="width:60px; height:50px; padding-left:10px;" />
    <br />
</div>

<div class="col-md-10" style="background-color:white; font-size:small;">

    <text style="color:midnightblue; padding-left:10px; font-size:large;">Correct Invalid Numbers </text>
    <br />
    <text style="font-size:small; padding-left:10px;">Correct invalid numbers. Please provide the required information</text>
    <br />
    <text style="font-size:small; padding-left:10px;">below before processing the request</text>
    <br />

</div>

<script type="text/javascript">
    function SelectedIndexChanged(s, e) {

        var thetype = ftype.GetText();

        if (thetype == "Regular") {
            endperiod.SetVisible(false);
            debit.SetVisible(false);
        } else {
            endperiod.SetVisible(true);
            debit.SetVisible(true);
        }
    }

</script>

@using (Html.BeginForm("CorrectInvalidNumbers_OK", "Contribution", FormMethod.Post))
    {

    @Html.AntiForgeryToken()
    @Html.DevExpress().FormLayout(setting =>
{
    setting.Name = "receivecrlayout";
    setting.ColCount = 2;

    setting.Items.AddTabbedGroupItem(group =>
    {

        if (ViewBag.Message != null)
            {
            setting.Items.Add(b =>
            {
                b.ShowCaption = DefaultBoolean.False;
                b.Name = "MessageGroup";

                b.NestedExtension().Label(lb =>
                {
                    lb.Name = "lblmessage";
                    lb.Text = ViewBag.Message;
                    lb.ControlStyle.ForeColor = System.Drawing.Color.Red;
                });

            });

            setting.Items.AddEmptyItem();

            }

        group.Items.AddGroupItem(group2 =>
        {
            group2.Name = "periodgroup";
            group2.Caption = "Correct Invalid Transactions";
            group2.GroupBoxDecoration = GroupBoxDecoration.None;
            group2.ColSpan = 2;
            group2.ColCount = 2;

            group2.Items.AddEmptyItem();
            group2.Items.AddEmptyItem();


            group2.Items.Add(m => m.validssno).NestedExtension().TextBox(b =>
            {
                b.Name = "validssno";

            });

            group2.Items.Add(i =>
            {
                i.Caption = " ";
                i.NestedExtension().Button(b =>
                {
                    b.Name = "cmdloadssno";
                    b.Text = "Load";
                    b.UseSubmitBehavior = true;
                    b.Width = Unit.Pixel(120);
                    b.RouteValues = new { Controller = "Contribution", Action = "CorrectInvalidNumbers_LoadSSNo", ParamValue = "" };
                });

            });

            group2.Items.Add(m => m.fname).NestedExtension().TextBox(b =>
            {
                b.Name = "fname";
                b.ReadOnly = true;
                b.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.LightGray;
            });

            group2.Items.AddEmptyItem();

            group2.Items.Add(m => m.ferno).NestedExtension().TextBox(b =>
            {
                b.Name = "ferno";

            });

            group2.Items.Add(i =>
            {
                i.Caption = " ";
                i.NestedExtension().Button(b =>
                {
                    b.Name = "cmdloaderno";
                    b.Text = "Load";
                    b.UseSubmitBehavior = true;
                    b.Width = Unit.Pixel(120);
                    b.RouteValues = new { Controller = "Contribution", Action = "CorrectInvalidNumbers_LoadERno", ParamValue = "" };
                });

            });
            group2.Items.Add(m => m.establishment).NestedExtension().TextBox(b =>
            {
                b.Name = "establishment";
                b.ReadOnly = true;
                b.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.LightGray;
            });

            group2.Items.Add(b => b.fcat).NestedExtension().ComboBox(b =>
            {

                b.Name = "fcat";

                List<PDCTemplate> myprovinces = (List<PDCTemplate>)TempData.Peek("MyEmployerCategories");

                b.Properties.Columns.Add("Code", "Code", Unit.Pixel(50));
                b.Properties.Columns.Add("Name", "Name", Unit.Pixel(200));

                b.Properties.DataSource = myprovinces;
                b.Properties.TextField = "Name";
                b.Properties.ValueField = "Code";

            });

            group2.Items.Add(m => m.usetype).NestedExtension().ComboBox(b =>
            {

                b.Name = "usetype";
                b.Properties.Items.Add("Use S.S. Number", "SSNO");
                b.Properties.Items.Add("Staff Number", "STAFFNO");
                b.Properties.Items.Add("Use Name", "NAME");

                b.Properties.EnableClientSideAPI = true;
                //b.Properties.ClientSideEvents.SelectedIndexChanged = "SelectedIndexChanged";

            });


            group2.Items.AddGroupItem(group3 =>
            {
                group3.Name = "invalidgroup";
                group3.Caption = "Information to update by";
                group3.GroupBoxDecoration = GroupBoxDecoration.Box;
                group3.ColSpan = 2;
                group3.ColCount = 2;


                group3.Items.AddGroupItem(group4 =>
                {
                    group4.Name = "ssnogroup";
                    group4.Caption = "Search by SSNo";
                    group4.GroupBoxDecoration = GroupBoxDecoration.Box;
                    group4.ColSpan = 2;
                    group4.ColCount = 2;

                    group4.Items.Add(m => m.ssno).NestedExtension().TextBox(b =>
                    {
                        b.Name = "ssno";

                    });

                });


                group3.Items.AddGroupItem(group4 =>
                {
                    group4.Name = "staffnogroup";
                    group4.Caption = "Search by SSNo";
                    group4.GroupBoxDecoration = GroupBoxDecoration.Box;
                    group4.ColSpan = 2;
                    group4.ColCount = 2;

                    group4.Items.Add(m => m.staffno).NestedExtension().TextBox(b =>
                    {
                        b.Name = "staffno";

                    });

                });

                group3.Items.AddGroupItem(group4 =>
                {
                    group4.Name = "namegroup";
                    group4.Caption = "Search by SSNo";
                    group4.GroupBoxDecoration = GroupBoxDecoration.Box;
                    group4.ColSpan = 2;
                    group4.ColCount = 2;


                    group4.Items.Add(m => m.fsurname).NestedExtension().TextBox(b =>
                    {
                        b.Name = "fsurname";

                    });

                    group4.Items.Add(m => m.firstname).NestedExtension().TextBox(b =>
                    {
                        b.Name = "firstname";

                    });

                    group4.Items.Add(m => m.fothername).NestedExtension().TextBox(b =>
                    {
                        b.Name = "fothername";

                    });

                });


                group3.Items.Add(i =>
                {
                    i.Caption = " ";
                    i.ShowCaption = DefaultBoolean.False;
                    i.ColSpan = 1;

                    i.NestedExtension().Button(b =>
                    {
                        b.Name = "cmdvalidate";
                        b.Text = "Validate";
                        b.UseSubmitBehavior = true;
                        b.Width = Unit.Pixel(120);
                        b.RouteValues = new { Controller = "Contribution", Action = "CorrectInvalidNumbers_Validate", ParamValue = "" };
                    });

                });

                if (ViewBag.Validation != null)
                    {
                    group3.Items.Add(b =>
                    {
                        b.ShowCaption = DefaultBoolean.False;
                        b.Name = "ValidateGroup";
                        
                        b.NestedExtension().Label(lb =>
                        {
                            lb.Name = "lblvalidate";
                            lb.Text = ViewBag.Validation;

                            if (lb.Text.ToString().ToUpper().Contains("FAILED"))
                                {
                                lb.ControlStyle.ForeColor = System.Drawing.Color.Red;
                                }
                            else
                                {
                                lb.ControlStyle.ForeColor = System.Drawing.Color.DarkOliveGreen;
                                }

                            group3.Items.AddEmptyItem();

                        });

                    });


                    group3.Items.Add(b =>
                    {
                        b.ShowCaption = DefaultBoolean.False;
                        b.Name = "ValidatemessageGroup";

                        b.NestedExtension().Label(lb =>
                        {
                            lb.Name = "lblvalidatemessage";
                            lb.Text = ViewBag.ValidationMessage;

                            if (ViewBag.Validation.ToString().ToUpper().Contains("FAILED"))
                                {
                                lb.ControlStyle.ForeColor = System.Drawing.Color.Red;
                                }
                            else
                                {
                                lb.ControlStyle.ForeColor = System.Drawing.Color.DarkOliveGreen;
                                }

                        });

                    });

                    }


            });

            group2.Items.Add(i =>
            {
                i.Caption = " ";
                i.ShowCaption = DefaultBoolean.False;

                i.NestedExtension().Button(b =>
                {
                    b.Name = "cmdprocess";
                    b.Text = "Accept";
                    b.UseSubmitBehavior = true;
                    b.Width = Unit.Pixel(120);
                    b.RouteValues = new { Controller = "Contribution", Action = "CorrectInvalidNumbers_OK", ParamValue = "" };

                    if (Model.establishment != null)
                        {
                        b.Enabled = true;
                        }
                    else
                        {
                        b.Enabled = false;
                        }
                });

            });

            group2.Items.Add(i =>
            {
                i.Caption = " ";
                i.ShowCaption = DefaultBoolean.False;

                i.NestedExtension().Button(b =>
                {
                    b.Name = "cmdclear";
                    b.Text = "Clear";
                    b.UseSubmitBehavior = false;
                    b.Width = Unit.Pixel(120);
                    b.RouteValues = new { Controller = "Contribution", Action = "CorrectInvalidNumbers", ParamValue = "" };
                });

            });




        });



    });

}).GetHtml()
    }

