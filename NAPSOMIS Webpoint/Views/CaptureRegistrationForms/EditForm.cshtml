@model NAPSOMIS_Webpoint.ViewModels.CaptureMemRegViewModel
@using NAPSOMIS_Webpoint.ViewModels

@{
    ViewBag.Title = "Edit Government Employees Form";
}

 
<div class="col-md-1" style="background-color:white; font-size:small;">
    <br />
    <img src="~/Content/Images/document_open_8.png" style="width:60px; height:50px; padding-left:10px;" />

</div>

<div class="col-md-11" style="background-color:white; font-size:small;">
    <br />
    <text style="color:midnightblue; padding-left:10px; font-size:large;"> Edit Member Registration Form </text>
    <br />
    <text style="font-size:small; padding-left:10px;">Please fill the information below using the government member form</text>


    <br />

</div>
<script type="text/javascript">
    var lastprovince = null;
    function OnProvinceChanged(fprovince) {
        if (fdist.InCallback())
            lastprovince = fprovince.GetValue().toString();
        else
            fdist.PerformCallback(fprovince.GetValue().toString());
    }

    function OnEndCallback(s, e) {
        if (lastprovince) {
            fdist.PerformCallback(lastprovince);
            lastprovince = null;
        }
    }

    function OnBeginCallback(s, e) {
        e.customArgs["Province"] = fprovince.GetValue();

    }

    function OnEmpSelectedIndexChanged(s, e) {
        var employervalue = femp_name.GetText().split(";");
        //alert(employervalue[1]);
        //alert(femp_name.GetText());

        ferno.SetText(employervalue[0])
        femp_addr.SetText(employervalue[2]);
        //ftel_no.SetText(employervalue[3]);
    }

    function OnNationKeyDown(s, e) {
        if (ASPxClientUtils.GetKeyCode(e.htmlEvent) == 13) {
            fb_country.Focus()
        };
        if (fnation.GetText() == 'S') {
            fnation.SetText('SIERRA LEONEAN');
            fb_country.SetText('SIERRA LEONE')
        }
    }

    function OnPrevButtonClick(s, e) {
        SetActiveTabByIndexIncrement(-1);
    }
    function OnNextButtonClick(s, e) {
        SetActiveTabByIndexIncrement(1);
    }

    function SetActiveTabByIndexIncrement(tabIndexIncrement) {
        var activeTabIndex = CaptureTab.GetActiveTab().index;
        activeTabIndex += tabIndexIncrement;
        CaptureTab.SetActiveTab(CaptureTab.GetTab(activeTabIndex));
    }

</script>


@using (Html.BeginForm("EditForm", "CaptureRegistrationForms", FormMethod.Post))
    {

    @Html.AntiForgeryToken()
    @Html.DevExpress().FormLayout(s =>
{

    s.Name = "StartCaptureGovernmetEmployees";
    s.ColCount = 3;

    s.Items.Add(b => b.fref_no).NestedExtension().TextBox(p =>
    {
        p.Name = "fref_no_2";
        p.Properties.ClientSideEvents.KeyDown = "function(s,e){if(ASPxClientUtils.GetKeyCode(e.htmlEvent) == 13)cmdloadref.DoClick();}";
    });

    s.Items.Add(btn =>
    {
        btn.Caption = "";

        btn.NestedExtension().Button(b =>
        {
            b.Name = "cmdloadref";
            b.Text = "Load Data";
            b.UseSubmitBehavior = true;
            b.Width = Unit.Pixel(100);
        });

    });


}).GetHtml()

    }

@using (Html.BeginForm("EditFormtoDependants", "CaptureRegistrationForms", FormMethod.Post))
    {

    @Html.AntiForgeryToken()
    @Html.DevExpress().FormLayout(s =>
{

    s.Name = "CaptureGovernmentForms";
    s.ColCount = 3;

    if (ViewBag.Message != null)
        {
        s.Items.Add(b =>
        {
            b.ShowCaption = DefaultBoolean.False;
            b.Name = "MessageGroup";

            b.NestedExtension().Label(lb =>
            {
                lb.Name = "lblmessage";
                lb.Text = ViewBag.Message;
                lb.ControlStyle.ForeColor = System.Drawing.Color.Red;
            });

        });

        s.Items.AddEmptyItem();
        s.Items.AddEmptyItem();

        }

    s.Items.AddTabbedGroupItem(group =>
    {
        group.ColSpan = 3;
        group.Name = "CaptureTab";

        group.Items.AddGroupItem(sb =>
        {
            sb.Caption = "Member Details";
            sb.Name = "firsttab";
            sb.ColSpan = 3;
            sb.ColCount = 3;

            sb.Items.AddGroupItem(g =>
            {
                g.Caption = "Name";
                g.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;
                g.ColSpan = 3;
                g.ColCount = 3;


                g.Items.Add(m => m.fref_no).NestedExtension().TextBox(b => { b.Name = "fref_no"; b.ReadOnly = false; });
                g.Items.Add(m => m.fsurname).NestedExtension().TextBox(b => { b.Name = "fsurname"; b.ReadOnly = false; });
                g.Items.Add(m => m.firstname).NestedExtension().TextBox(b => { b.Name = "firstname"; b.ReadOnly = false; });
                g.Items.Add(m => m.fothname).NestedExtension().TextBox(b => { b.Name = "fothname"; b.ReadOnly = false; });
                g.Items.Add(m => m.fb_date).NestedExtension().DateEdit(b => { b.Name = "fb_date"; b.ReadOnly = false; });

            });

            sb.Items.AddGroupItem(g =>
            {
                g.Caption = "Previous Name";
                g.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;
                g.ColSpan = 3;
                g.ColCount = 3;


                g.Items.Add(m => m.fpsurname).NestedExtension().TextBox(b => { b.Name = "fpsurname"; b.ReadOnly = false; });
                g.Items.Add(m => m.fpfirstname).NestedExtension().TextBox(b => { b.Name = "fpfirstname"; b.ReadOnly = false; });
                g.Items.Add(m => m.fpothname).NestedExtension().TextBox(b => { b.Name = "fpothname"; b.ReadOnly = false; });

            });

            sb.Items.AddGroupItem(g =>
            {
                g.Caption = "Details";
                g.GroupBoxDecoration = GroupBoxDecoration.Box;
                g.ColSpan = 3;
                g.ColCount = 3;

                g.Items.Add(m => m.fper_addr).NestedExtension().TextBox(b =>
                {
                    b.Name = "fper_addr";
                    //b.Height = 70;
                    b.Properties.CaptionSettings.Position = EditorCaptionPosition.Top;
                    b.Properties.CaptionSettings.VerticalAlign = EditorCaptionVerticalAlign.Top;
                    b.Properties.ClientSideEvents.KeyDown = "function(s,e){if(ASPxClientUtils.GetKeyCode(e.htmlEvent) == 13)fcur_addr.Focus();}";
                    b.Properties.ClientSideEvents.TextChanged = "function(s,e){fcur_addr.SetText(fper_addr.GetText());}";

                });

                g.Items.Add(m => m.fcur_addr).NestedExtension().TextBox(b =>
                {
                    b.Name = "fcur_addr";
                    //b.Height = 70;
                    b.Properties.ClientSideEvents.KeyDown = "function(s,e){if(ASPxClientUtils.GetKeyCode(e.htmlEvent) == 13)fm_stat.Focus();}";
                });

                g.Items.Add(m => m.fm_stat).NestedExtension().ComboBox(b =>
                {
                    b.Name = "fm_stat";
                    b.Properties.Items.Add("Married", "M");
                    b.Properties.Items.Add("Single", "S");
                    b.Properties.Items.Add("Widowed", "W");
                    b.Properties.Items.Add("Divorced", "D");
                    b.Properties.ClientSideEvents.KeyDown = "function(s,e){if(ASPxClientUtils.GetKeyCode(e.htmlEvent) == 13)fnation.Focus();}";
                });

                g.Items.Add(m => m.fnation).NestedExtension().TextBox(b =>
                {
                    b.Name = "fnation";
                    //b.Properties.ClientSideEvents.KeyDown = "function(s,e){if(e.htmlEvent.keycode == ASPxKey.Enter)fb_country.Focus();}";
                    b.Properties.ClientSideEvents.KeyDown = "OnNationKeyDown";
                });

                g.Items.Add(m => m.fb_country).NestedExtension().TextBox(b =>
                {
                    b.Name = "fb_country";
                    b.Properties.ClientSideEvents.KeyDown = "function(s,e){if(ASPxClientUtils.GetKeyCode(e.htmlEvent) == 13)fsex.Focus();}";
                });


                g.Items.Add(m => m.fsex).NestedExtension().RadioButtonList(b =>
                {
                    b.Name = "fsex";
                    b.Properties.Items.Add("Male", "M");
                    b.Properties.Items.Add("Female", "F");

                });

            });

            sb.Items.AddGroupItem(g =>
            {
                g.Caption = "Place of Birth";
                g.GroupBoxDecoration = GroupBoxDecoration.Box;
                g.ColSpan = 3;
                g.ColCount = 3;

                g.Items.Add(m => m.fprovince).NestedExtension().ComboBox(b =>
                {
                    b.Name = "fprovince";

                    List<PDCTemplate>
        myprovinces = (List<PDCTemplate>
            )TempData.Peek("MyProvinces");

                    b.Properties.Columns.Add("Code", "Code", Unit.Pixel(50));
                    b.Properties.Columns.Add("Name", "Name", Unit.Pixel(200));

                    b.Properties.DataSource = myprovinces;
                    b.Properties.TextField = "Name";
                    b.Properties.ValueField = "Code";

                    //b.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;

                    b.Properties.ClientSideEvents.KeyDown = "function(s,e){if(ASPxClientUtils.GetKeyCode(e.htmlEvent) == 13)fdist.Focus();}";
                    //b.Properties.ClientSideEvents.SelectedIndexChanged = "function(s,e){fdist.PerformCallback(fprovince.GetValue())}";
                });

                g.Items.Add(m => m.fdist).NestedExtension().ComboBox(b =>
                {
                    b.Name = "fdist";
                    List<PDCTemplate>
                        mydistrict = (List<PDCTemplate>
                            )TempData.Peek("MyDistricts");

                    b.Properties.Columns.Add("Code", "Code", Unit.Pixel(50));
                    b.Properties.Columns.Add("Name", "Name", Unit.Pixel(200));

                    b.Properties.DataSource = mydistrict;
                    b.Properties.TextField = "Name";
                    b.Properties.ValueField = "Code";

                    //b.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;

                    //b.CallbackRouteValues = new { Controller = "CaptureGovernmetEmployees", Action = "FilterDistrict" };
                    //b.Properties.CallbackPageSize = 30;

                    b.Properties.ClientSideEvents.KeyDown = "function(s,e){if(ASPxClientUtils.GetKeyCode(e.htmlEvent) == 13)fchief.Focus();}";
                    //b.Properties.ClientSideEvents.BeginCallback = "OnBeginCallback";

                });


                g.Items.Add(m => m.fchief).NestedExtension().ComboBox(b =>
                {
                    b.Name = "fchief";
                    List<PDCTemplate>
                        mychiefdom = (List<PDCTemplate>
                            )TempData.Peek("MyChiefdoms");

                    b.Properties.Columns.Add("Code", "Code", Unit.Pixel(50));
                    b.Properties.Columns.Add("Name", "Name", Unit.Pixel(200));

                    b.Properties.DataSource = mychiefdom;
                    b.Properties.TextField = "Name";
                    b.Properties.ValueField = "Code";
                    //b.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;

                    b.Properties.ClientSideEvents.KeyDown = "function(s,e){if(ASPxClientUtils.GetKeyCode(e.htmlEvent) == 13)ftown.Focus();}";
                });

                g.Items.Add(m => m.ftown).NestedExtension().TextBox(b =>
                {
                    b.Name = "ftown";
                    b.Properties.ClientSideEvents.KeyDown = "function(s,e){if(ASPxClientUtils.GetKeyCode(e.htmlEvent) == 13)fgen_date.Focus();}";
                });

            });


            sb.Items.Add(m => m.fjoindate).NestedExtension().DateEdit(b =>
            {
                b.Name = "fjoindate";
                b.ReadOnly = false;
                b.Properties.ClientSideEvents.KeyDown = "function(s,e){if(ASPxClientUtils.GetKeyCode(e.htmlEvent) == 13)fnat_income.Focus();}";

            });

            sb.Items.Add(m => m.fnat_income).NestedExtension().RadioButtonList(m =>
            {
                m.Name = "fnat_income";
                m.SelectedIndex = 1;
                m.Properties.Items.Add("Daily", "1");
                m.Properties.Items.Add("Monthly", "2");
                m.Properties.Items.Add("Yearly", "3");

            });

            sb.Items.Add(m => m.fincome).NestedExtension().TextBox(m =>
            {
                m.Name = "fincome";
                m.Properties.DisplayFormatString = "C2";

                m.Properties.ClientSideEvents.KeyDown = "function(s,e){if(ASPxClientUtils.GetKeyCode(e.htmlEvent) == 13)foccupation.Focus();}";
            });

            sb.Items.Add(m => m.foccupation).NestedExtension().ComboBox(b =>
            {

                b.Name = "foccupation";

                List<PDCTemplate>
                    myoccupations = (List<PDCTemplate>
                        )TempData.Peek("MyOccupations");

                b.Properties.Columns.Add("Code", "Code", Unit.Pixel(50));
                b.Properties.Columns.Add("Name", "Name", Unit.Pixel(250));

                b.Properties.DataSource = myoccupations;
                b.Properties.TextField = "Name";
                b.Properties.ValueField = "Code";

                //b.Properties.IncrementalFilteringMode = IncrementalFilteringMode.None;

                b.Properties.ClientSideEvents.KeyDown = "function(s,e){if(ASPxClientUtils.GetKeyCode(e.htmlEvent) == 13)ffsurname.Focus();}";
            });

            sb.Items.AddGroupItem(g =>
            {
                g.Name = "fathergroup";
                g.Caption = "Father";
                g.ColSpan = 3;
                g.ColCount = 3;
                g.GroupBoxDecoration = GroupBoxDecoration.Box;

                g.Items.Add(m => m.ffsurname).NestedExtension().TextBox(b =>
                {
                    b.Name = "ffsurname";
                    b.Properties.ClientSideEvents.KeyDown = "function(s,e){if(ASPxClientUtils.GetKeyCode(e.htmlEvent) == 13)ffirstname.Focus();}";
                });

                g.Items.Add(m => m.ffirstname).NestedExtension().TextBox(b =>
                {
                    b.Name = "ffirstname";
                    b.Properties.ClientSideEvents.KeyDown = "function(s,e){if(ASPxClientUtils.GetKeyCode(e.htmlEvent) == 13)ffothname.Focus();}";
                });

                g.Items.Add(m => m.ffothname).NestedExtension().TextBox(b =>
                {
                    b.Name = "ffothname";
                    b.Properties.ClientSideEvents.KeyDown = "function(s,e){if(ASPxClientUtils.GetKeyCode(e.htmlEvent) == 13)fmsurname.Focus();}";
                });

            });


            sb.Items.AddGroupItem(g =>
            {
                g.Name = "mothergroup";
                g.Caption = "Mother";
                g.ColSpan = 3;
                g.ColCount = 3;
                g.GroupBoxDecoration = GroupBoxDecoration.Box;

                g.Items.Add(m => m.fmsurname).NestedExtension().TextBox(b =>
                {
                    b.Name = "fmsurname";
                    b.Properties.ClientSideEvents.KeyDown = "function(s,e){if(ASPxClientUtils.GetKeyCode(e.htmlEvent) == 13)fmfirstname.Focus();}";
                });

                g.Items.Add(m => m.fmfirstname).NestedExtension().TextBox(b =>
                {
                    b.Name = "fmfirstname";
                    b.Properties.ClientSideEvents.KeyDown = "function(s,e){if(ASPxClientUtils.GetKeyCode(e.htmlEvent) == 13)fmothname.Focus();}";
                });

                g.Items.Add(m => m.fmothname).NestedExtension().TextBox(b =>
                {
                    b.Name = "fmothname";
                    b.Properties.ClientSideEvents.KeyDown = "function(s,e){if(ASPxClientUtils.GetKeyCode(e.htmlEvent) == 13)ferno.Focus();}";
                });


            });


           
        });


        group.Items.AddGroupItem(sb =>
        {
            sb.Caption = "Employer";
            sb.Name = "secondtab";

            sb.ColSpan = 3;
            sb.ColCount = 3;
            sb.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;

            sb.Items.Add(m => m.ferno).NestedExtension().TextBox(b =>
            {
                b.Name = "ferno";
                //b.Properties.ClientSideEvents.TextChanged = "function(s,e){alert(femp_name.SetValue(ferno.GetText());}";
                b.Properties.ClientSideEvents.KeyDown = "function(s,e){if(ASPxClientUtils.GetKeyCode(e.htmlEvent) == 13)femp_name.Focus();}";
                b.Properties.ClientSideEvents.TextChanged = "function(s,e){combobox.SetValue(ferno.GetText());}";
            });

            sb.Items.Add(m => m.femp_name).NestedExtension().ComboBox(b =>
            {
                b.Name = "femp_name";

                List<EmployerTemplate>
                    myemployers = (List<EmployerTemplate>
                        )TempData.Peek("MyEmployers");

                b.Properties.Columns.Add("Code", "Code", Unit.Pixel(100));
                b.Properties.Columns.Add("Name", "Name", Unit.Pixel(350));
                b.Properties.Columns.Add("Address", "Address", Unit.Pixel(350));
                b.Properties.Columns.Add("TelNo", "Tel No", Unit.Pixel(100));

                b.Properties.DataSource = myemployers;
                b.Properties.TextField = "Name";
                b.Properties.ValueField = "Name";
                b.Properties.ShowShadow = true;
                b.Properties.AnimationType = AnimationType.Slide;

                b.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                b.Properties.ClientSideEvents.SelectedIndexChanged = "OnEmpSelectedIndexChanged";
                b.Properties.ClientSideEvents.KeyDown = "function(s,e){if(ASPxClientUtils.GetKeyCode(e.htmlEvent) == 13)femp_addr.Focus();}";

            });

            sb.Items.Add(m => m.femp_addr).NestedExtension().TextBox(b =>
            {
                b.Name = "femp_addr";
                b.Properties.ClientSideEvents.KeyDown = "function(s,e){if(ASPxClientUtils.GetKeyCode(e.htmlEvent) == 13)ftel_no.Focus();}";
            });

            sb.Items.Add(m => m.ftel_no).NestedExtension().TextBox(b =>
            {
                b.Name = "ftel_no";
                b.Properties.ClientSideEvents.KeyDown = "function(s,e){if(ASPxClientUtils.GetKeyCode(e.htmlEvent) == 13)cmdappend.DoClick();}";
            });

        });

        group.Items.AddGroupItem(sb =>
        {
            sb.Caption = "Member's Dependants";
            sb.Name = "thirdtab";
            sb.ColSpan = 3;
            sb.ColCount = 3;

            sb.Items.Add(i =>
            {
                i.Caption = " ";
                i.NestedExtension().Button(b =>
                {
                    b.Name = "cmdappend";
                    b.Text = "Edit Member Dependants";
                    b.UseSubmitBehavior = true;
                    b.Width = Unit.Pixel(100);

                });
            });

            sb.Items.AddEmptyItem();
            sb.Items.AddEmptyItem();

        });

    });

    s.Items.AddGroupItem(g =>
    {
        g.ColSpan = 3;
        g.ColCount = 3;
        g.Caption = "";
        g.GroupBoxDecoration = GroupBoxDecoration.None;

        g.ShowCaption = DefaultBoolean.False;
        g.Paddings.PaddingBottom = 6;
        g.Paddings.PaddingLeft = 0;
        g.Paddings.PaddingTop = 5;
        g.UseDefaultPaddings = false;

        g.Name = "cleargroup";
        g.Items.Add(i =>
        {
            i.Caption = " ";
            i.NestedExtension().Button(b =>
            {
                b.Name = "clear";
                b.Text = "Start New Entry";
                b.UseSubmitBehavior = false;
                b.Width = Unit.Pixel(120);
                b.RouteValues = new { Controller = "CaptureRegistrationForms", Action = "EditForm", ParamValue = "" };
            });

        });



        g.Items.Add(i =>
        {
            i.Caption = " ";
            i.NestedExtension().Button(b =>
            {
                b.Name = "cmdnextgroup";
                b.Text = "<< Previous";
                b.UseSubmitBehavior = false;
                b.Width = Unit.Pixel(100);
                //b.RouteValues = new { Controller = "CaptureRegistrationForms", Action = "CaptureRegistrationForms", ParamValue = "" };
                b.ClientSideEvents.Click = "OnPrevButtonClick";
            });
        });


        g.Items.Add(i =>
        {
            i.Caption = " ";
            i.NestedExtension().Button(b =>
            {
                b.Name = "cmdnexttab";
                b.Text = ">> Next";
                b.UseSubmitBehavior = false;
                b.Width = Unit.Pixel(100);
                //b.RouteValues = new { Controller = "CaptureRegistrationForms", Action = "CaptureRegistrationForms", ParamValue = "" };
                b.ClientSideEvents.Click = "OnNextButtonClick";
            });
        });


        g.Items.Add(i =>
        {
            i.Caption = "";
            i.NestedExtension().Button(btn =>
            {
                btn.Name = "cmdComplete";
                btn.Text = "Save Changes";
                btn.UseSubmitBehavior = true;

                btn.Width = Unit.Pixel(120);
                btn.UseSubmitBehavior = true;
                btn.RouteValues = new { Controller = "CaptureRegistrationForms", Action = "SaveFormEdit", ParamValue = "" };

            });

        });


    });


}).GetHtml();
    }


