@model NAPSOMIS_Webpoint.ViewModels.CashControlViewModel

@using NAPSOMIS_Webpoint.ViewModels
@using NAPSOMIS_Webpoint.Models

@{
    ViewBag.Title = "Cash Control";
}
<div class="col-md-1" style="background-color:white; font-size:small;">
    <br />
    <img src="~/Content/Images/kspread-3.png" style="width:70px; height:60px; padding-left:10px;" />
    <br />
</div>

<div class="col-md-10" style="background-color:white; font-size:small;">
    <br />
    <text style="color:midnightblue; padding-left:10px; font-size:large;"> Cash Control </text>
    <br />
    <text style="font-size:small; padding-left:10px;">Please fill the form below prior to processing the request</text>
    <br />
    <br />

</div>


@using (Html.BeginForm("CashControl_OK", "AccountPayment", FormMethod.Post))
    {

    @Html.AntiForgeryToken()
    @Html.DevExpress().FormLayout(setting =>
{
    setting.Name = "receivecrlayout";
    setting.ColCount = 2;

    if (ViewBag.Message != null)
        {
        setting.Items.Add(b =>
        {
            b.ShowCaption = DefaultBoolean.False;
            b.Name = "MessageGroup";

            b.NestedExtension().Label(lb =>
            {
                lb.Name = "lblmessage";
                lb.Text = ViewBag.Message;
                lb.ControlStyle.ForeColor = System.Drawing.Color.Red;
            });

        });

        setting.Items.AddEmptyItem();

        }

    setting.Items.AddTabbedGroupItem(tab =>
    {
        tab.Name = "tablayout";
        tab.Caption = "Bank Lodgment";
        tab.ColSpan = 2;

        tab.Items.AddGroupItem(group =>
        {
            group.Name = "CashControlgroup";
            group.Caption = "Capture Bank Logement";
            group.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;
            group.ColSpan = 2;
            group.ColCount = 2;



            group.Items.AddGroupItem(group2 =>
            {
                group2.Name = "secondgroup";
                group2.Caption = "Summary";
                group2.GroupBoxDecoration = GroupBoxDecoration.Box;
                group2.ColSpan = 2;
                group2.ColCount = 2;

                group2.Items.Add(b => b.cheque).NestedExtension().TextBox(c =>
                {
                    c.Name = "cheque";
                    c.ReadOnly = true;
                    c.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.LightGray;
                    c.Properties.DisplayFormatString = "N2";
                });

                group2.Items.Add(b => b.journaltransfer).NestedExtension().TextBox(c =>
                {
                    c.Name = "journaltransfer";
                    c.ReadOnly = true;
                    c.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.LightGray;
                    c.Properties.DisplayFormatString = "N2";
                });

                group2.Items.Add(b => b.bankadvice).NestedExtension().TextBox(c =>
                {
                    c.Name = "bankadvice";
                    c.ReadOnly = true;
                    c.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.LightGray;
                    c.Properties.DisplayFormatString = "N2";
                });

                group2.Items.Add(b => b.cash).NestedExtension().TextBox(c =>
                {
                    c.Name = "cash";
                    c.ReadOnly = true;
                    c.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.LightGray;
                    c.Properties.DisplayFormatString = "N2";
                });

                group2.Items.Add(b => b.totalcaptured).NestedExtension().TextBox(c =>
                {
                    c.Name = "totalcaptured";
                    c.ReadOnly = true;
                    c.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.LightGray;
                    c.Properties.DisplayFormatString = "N2";
                });


                group2.Items.Add(b => b.totaldifference).NestedExtension().TextBox(c =>
                {
                    c.Name = "totaldifference";
                    c.ReadOnly = true;
                    c.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.LightGray;
                    c.Properties.DisplayFormatString = "N2";
                    c.Properties.ReadOnlyStyle.ForeColor = System.Drawing.Color.Red;
                });

                group2.Items.Add(b => b.totalamount).NestedExtension().TextBox(c =>
                {
                    c.Name = "totalamount";
                    c.ReadOnly = true;
                    c.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.LightGray;
                    c.Properties.DisplayFormatString = "N2";
                });

            });


            group.Items.AddGroupItem(group2 =>
            {
                group2.Name = "searchgroup";
                group2.Caption = "Search Receipt Date";
                group2.GroupBoxDecoration = GroupBoxDecoration.Box;
                group2.ColSpan = 2;
                group2.ColCount = 2;

                group2.Items.Add(b => b.receiptdate).NestedExtension().DateEdit(c =>
                {
                    c.Name = "receiptdate";

                });

                group2.Items.Add(bt =>
                {
                    bt.Name = "btchloadreceiptno";
                    bt.ShowCaption = DefaultBoolean.True;
                    bt.Caption = "";

                    bt.NestedExtension().Button(b =>
                    {
                        b.Name = "cmdCashControlernodata";
                        b.Width = Unit.Pixel(100);
                        b.Text = "Load";
                        b.RouteValues = new { Controller = "AccountPayment", Action = "CashControl_Search" };
                        b.UseSubmitBehavior = true;

                    });

                });


            });


            group.Items.AddGroupItem(group2 =>
            {
                group2.Name = "currencysetupgroup";
                group2.Caption = "Capturing";
                group2.GroupBoxDecoration = GroupBoxDecoration.Box;
                group2.ColSpan = 2;
                group2.ColCount = 2;

                group2.Items.Add(m => m.currency).NestedExtension().ComboBox(b =>
                {
                    b.Name = "currency";

                    if (TempData.Peek("MyDenomination") != null)
                        {
                        List<PDCTemplate> myoffices = (List<PDCTemplate>)TempData.Peek("MyDenomination");

                        b.Properties.Columns.Add("Code", "Code", Unit.Pixel(50));
                        b.Properties.Columns.Add("Name", "Name", Unit.Pixel(200));

                        b.Properties.DataSource = myoffices;
                        b.Properties.TextField = "Name";
                        b.Properties.ValueField = "Code";
                        }

                });

                group2.Items.Add(b => b.currencyquantity).NestedExtension().TextBox(c =>
                {
                    c.Name = "currencyquantity";

                });

                group2.Items.Add(b => b.currencytotalamount).NestedExtension().TextBox(c =>
                {
                    c.Name = "currencytotalamount";
                    c.ReadOnly = true;
                    c.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.LightGray;
                    c.Properties.DisplayFormatString = "N2";
                    c.Properties.ReadOnlyStyle.Font.Bold = true;
                    c.Properties.ReadOnlyStyle.Font.Size = 12;
                });

                group2.Items.Add(bt =>
                {
                    bt.Name = "btprocesscurrency";
                    bt.ShowCaption = DefaultBoolean.True;
                    bt.Caption = "";

                    bt.NestedExtension().Button(b =>
                    {
                        b.Name = "cmdprocesscurrency";
                        b.Width = Unit.Pixel(100);
                        b.Text = "Process";
                        b.RouteValues = new { Controller = "AccountPayment", Action = "CashControl_Process" };
                        b.UseSubmitBehavior = true;

                    });

                });

                group2.Items.Add(bt =>
                {
                    bt.Name = "btokcurrency";
                    bt.ShowCaption = DefaultBoolean.True;
                    bt.Caption = "";

                    bt.NestedExtension().Button(b =>
                    {
                        b.Name = "cmdokcurrency";
                        b.Width = Unit.Pixel(100);
                        b.Text = "OK";
                        b.RouteValues = new { Controller = "AccountPayment", Action = "CashControl_OK" };
                        b.UseSubmitBehavior = true;

                    });

                });

                group2.Items.Add(b => b.edit).NestedExtension().CheckBox(c =>
                {
                    c.Name = "edit";
                    c.ReadOnly = true;
                    c.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.LightGray;
                });

            });

            group.Items.AddGroupItem(group2 =>
            {
                group2.Name = "currencysetupgroup";
                group2.Caption = "Captured";
                group2.GroupBoxDecoration = GroupBoxDecoration.Box;
                group2.ColSpan = 2;
                group2.ColCount = 2;

                group2.Items.Add(b =>
                {
                    b.Name = "breakdowngridview";
                    b.Caption = "";
                    b.ShowCaption = DefaultBoolean.False;

                    b.SetNestedContent(() =>
                    {

                        if (TempData.Peek("DenominationBreakdown") != null)
                            {

                            List<CashControlBreakdownViewModel> plist = (List<CashControlBreakdownViewModel>)TempData.Peek("DenominationBreakdown");
                            IEnumerable<CashControlBreakdownViewModel> penum = (IEnumerable<CashControlBreakdownViewModel>)plist;
                            @Html.RenderPartial("CashControlBreakdownList", penum);

                            }

                    });

                });

            });

            group.Items.AddGroupItem(group2 =>
            {

                group2.Name = "buttongroup";
                group2.Caption = "Actions";
                group2.GroupBoxDecoration = GroupBoxDecoration.Box;
                group2.ColSpan = 2;
                group2.ColCount = 2;

                group2.Items.Add(bt =>
                {
                    bt.Name = "btgroup";
                    bt.ShowCaption = DefaultBoolean.False;

                    bt.NestedExtension().Button(b =>
                    {
                        b.Name = "cmdCashControlreset";
                        b.Width = Unit.Pixel(100);
                        b.Text = "Clear";
                        b.RouteValues = new { Controller = "AccountPayment", Action = "CashControl" };
                        b.UseSubmitBehavior = false;

                    });

                });


                group2.Items.Add(bt =>
                {
                    bt.Name = "btgroup";
                    bt.ShowCaption = DefaultBoolean.True;
                    bt.Caption = "";

                    bt.NestedExtension().Button(b =>
                    {
                        b.Name = "cmdCashControlcomplete";
                        b.Width = Unit.Pixel(100);
                        b.Text = "Accept";
                        b.RouteValues = new { Controller = "AccountPayment", Action = "CashControl_Accept" };
                        b.UseSubmitBehavior = true;

                        if (Model.totaldifference != null)
                            {
                            if (Model.totaldifference == 0)
                                {
                                b.Enabled = true;
                                }
                            else
                                {
                                b.Enabled = false;
                                }
                            }
                        else
                            {
                            b.Enabled = false;
                            }

                    });

                });

            });



        });

    });




}).GetHtml()


    }
