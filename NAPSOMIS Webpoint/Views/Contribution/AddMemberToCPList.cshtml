@model NAPSOMIS_Webpoint.ViewModels.AddMemberToCPListViewModel

@using NAPSOMIS_Webpoint.ViewModels
@using NAPSOMIS_Webpoint.Models

@{
    ViewBag.Title = "Add Members to CP List";
}
<br />

<div class="col-md-1" style="background-color:white; font-size:small;">
    <br />
    <img src="~/Content/Images/address-book-new-3.png" width:60px; height:50px; padding-left:10px;" />
    <br />
</div>

<div class="col-md-10" style="background-color:white; font-size:small;">

    <text style="color:midnightblue; padding-left:10px; font-size:large;"> Add Members to Credit Purchase List </text>
    <br />
    <text style="font-size:small; padding-left:10px;">Please fill the form below prior to processing the request</text>
    <br />
</div>
 


@using (Html.BeginForm("AddMemberToCPList_OK", "Contribution", FormMethod.Post))
    {

    @Html.AntiForgeryToken()
    @Html.DevExpress().FormLayout(setting =>
{
    setting.Name = "receivecrlayout";
    setting.ColCount = 3;

    if (ViewBag.Message != null)
        {
        setting.Items.Add(b =>
        {
            b.ShowCaption = DefaultBoolean.False;
            b.Name = "MessageGroup";

            b.NestedExtension().Label(lb =>
            {
                lb.Name = "lblmessage";
                lb.Text = ViewBag.Message;
                lb.ControlStyle.ForeColor = System.Drawing.Color.Red;
            });

        });

        setting.Items.AddEmptyItem();

        }

    setting.Items.AddGroupItem(group =>
    {
        group.Name = "firstgroup";
        group.Caption = "Basic Search Criteria";
        group.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;
        group.ColSpan = 3;
        group.ColCount = 3;

        group.Items.Add(b => b.fssno).NestedExtension().TextBox(c =>
        {
            c.Name = "fssno";

        });

        group.Items.Add(bt =>
        {
            bt.Name = "btloadssno";
            bt.ShowCaption = DefaultBoolean.True;
            bt.Caption = "";

            bt.NestedExtension().Button(b =>
            {
                b.Name = "cmdloadernodata";
                b.Width = Unit.Pixel(100);
                b.Text = "Load";
                b.RouteValues = new { Controller = "Contribution", Action = "AddMemberToCPList_LoadSSNo" };
                b.UseSubmitBehavior = true;

            });

        });

        group.Items.AddEmptyItem();

        group.Items.Add(b => b.fsurname).NestedExtension().TextBox(c =>
        {
            c.Name = "fsurname";
            c.ReadOnly = true;
            c.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.LightGray;
        });

        group.Items.Add(b => b.firstname).NestedExtension().TextBox(c =>
        {
            c.Name = "firstname";
            c.ReadOnly = true;
            c.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.LightGray;
        });

        group.Items.Add(b => b.fothername).NestedExtension().TextBox(c =>
        {
            c.Name = "fothername";
            c.ReadOnly = true;
            c.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.LightGray;
        });

        group.Items.Add(b => b.fsex).NestedExtension().TextBox(c =>
        {
            c.Name = "fsex";
            c.ReadOnly = true;
            c.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.LightGray;
        });


        group.Items.Add(b => b.fdateofbirth).NestedExtension().DateEdit(c =>
        {
            c.Name = "fdateofbirth";
            c.ReadOnly = true;
            c.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.LightGray;
        });


        group.Items.Add(b => b.fage).NestedExtension().TextBox(c =>
        {
            c.Name = "fage";
            c.ReadOnly = true;
            c.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.LightGray;
        });


    });


    setting.Items.AddGroupItem(group =>
    {
        group.Name = "inputgroup";
        group.Caption = "Operation";
        group.GroupBoxDecoration = GroupBoxDecoration.Box;
        group.ColSpan = 3;
        group.ColCount = 3;

        group.Items.Add(m => m.fnassitpaypoint).NestedExtension().ComboBox(b =>
        {
            b.Name = "fnassitpaypoint";

            if (TempData.Peek("MyAreaOffices") != null)
                {
                List<PDCTemplate> myoffices = (List<PDCTemplate>)TempData.Peek("MyAreaOffices");

                b.Properties.Columns.Add("Code", "Code", Unit.Pixel(50));
                b.Properties.Columns.Add("Name", "Name", Unit.Pixel(200));

                b.Properties.DataSource = myoffices;
                b.Properties.TextField = "Name";
                b.Properties.ValueField = "Code";
                }


        });


        group.Items.Add(b => b.fannualsalary).NestedExtension().TextBox(c =>
        {
            c.Name = "fannualsalary";

        });

        group.Items.Add(b => b.fnoofyears).NestedExtension().TextBox(c =>
        {
            c.Name = "fnoofyears";

        });


        group.Items.Add(bt =>
        {
            bt.Name = "btloadsip";
            bt.ShowCaption = DefaultBoolean.True;
            bt.Caption = "";

            bt.NestedExtension().Button(b =>
            {
                b.Name = "cmdloadsip";
                b.Width = Unit.Pixel(100);
                b.Text = "OK";
                b.RouteValues = new { Controller = "Contribution", Action = "AddMemberToCPList_LoadSip" };
                b.UseSubmitBehavior = true;

            });

        });

    });

    setting.Items.AddGroupItem(group =>
    {
        group.Name = "periodgroup";
        group.Caption = "Factor/Validation";
        group.GroupBoxDecoration = GroupBoxDecoration.Box;
        group.ColSpan = 3;
        group.ColCount = 3;

        group.Items.Add(b => b.ffactor).NestedExtension().TextBox(c =>
        {
            c.Name = "ffactor";
            c.ReadOnly = true;
            c.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.LightGray;
        });

        group.Items.Add(b => b.fcostofvalidation).NestedExtension().TextBox(c =>
        {
            c.Name = "fcostofvalidation";
            c.ReadOnly = true;
            c.Properties.ReadOnlyStyle.BackColor = System.Drawing.Color.LightGray;
        });

    });


    setting.Items.AddGroupItem(group =>
    {

        group.Name = "buttongroup";
        group.Caption = "Actions";
        group.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;
        group.ColSpan = 3;
        group.ColCount = 3;

        group.Items.Add(b => b.fedit).NestedExtension().CheckBox(c =>
        {
            c.Name = "fedit";

        });

        group.Items.Add(bt =>
        {
            bt.Name = "btgroup";
            bt.ShowCaption = DefaultBoolean.False;

            bt.NestedExtension().Button(b =>
            {
                b.Name = "cmdreset";
                b.Width = Unit.Pixel(100);
                b.Text = "Start New Entry";
                b.RouteValues = new { Controller = "Contribution", Action = "AddMemberToCPList" };
                b.UseSubmitBehavior = false;

            });

        });


        group.Items.Add(bt =>
        {
            bt.Name = "btgroup";
            bt.ShowCaption = DefaultBoolean.True;
            bt.Caption = "";

            bt.NestedExtension().Button(b =>
            {
                b.Name = "cmdcomplete";
                b.Width = Unit.Pixel(100);
                b.Text = "Accept";
                b.RouteValues = new { Controller = "Contribution", Action = "AddMemberToCPList_OK" };
                b.UseSubmitBehavior = true;
                b.Enabled = false;

                if (Model.fcostofvalidation > 0)
                    {
                    b.Enabled = true;
                    }
                else
                    {
                    b.Enabled = false;
                    }

            });

        });

    });

}).GetHtml()


    }
