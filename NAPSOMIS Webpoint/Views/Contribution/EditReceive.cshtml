@model NAPSOMIS_Webpoint.ViewModels.CRSRegViewModel

@using NAPSOMIS_Webpoint.ViewModels

@{
    ViewBag.Title = "Edit Receive CR at Data Control";
}

<br />


<div class="col-md-1" style="background-color:white; font-size:small;">
    <br />
    <img src="~/Content/Images/view_pim_contacts.png" style="width:60px; height:50px; padding-left:10px;" />

</div>

<div class="col-md-10" style="background-color:white; font-size:small;">
    <text style="color:midnightblue; padding-left:10px; font-size:large;">Edit Receive CR at Data Control </text>
    <br />
    <text style="font-size:small; padding-left:10px;">Please update the necessary fields below using the contribution form</text>
    <br />
</div>

<script type="text/javascript">
    function SelectedIndexChanged(s, e) {

        var thetype = ftype.GetText();

        if (thetype == "Regular") {
            fbaktype.SetVisible(false);
            fmode.SetVisible(true);
        } else {
            fbaktype.SetVisible(true);
            fmode.SetVisible(false);
        }
    }

</script>


@using (Html.BeginForm("EditReceive_Receive", "Contribution", FormMethod.Post))
    {

    @Html.AntiForgeryToken()
    @Html.DevExpress().FormLayout(setting =>
{
    setting.Name = "receivecrlayout";
    setting.ColCount = 3;

    setting.Items.AddGroupItem(group =>
    {
        group.Name = "firstgroup";
        group.Caption = "Basic Details";
        group.GroupBoxDecoration = GroupBoxDecoration.Box;
        group.ColSpan = 3;
        group.ColCount = 3;

        group.Items.Add(b => b.ferno).NestedExtension().TextBox(c =>
        {
            c.Name = "ferno";

        });
 
        group.Items.Add(b => b.fperiod).NestedExtension().TextBox(b =>
        {
            b.Name = "fperiod";
            b.Properties.ClientSideEvents.LostFocus = "function(s,e){dperiod.SetText(fperiod.GetText())}";
        });

        group.Items.Add(b => b.feperiod).NestedExtension().TextBox(b =>
        {
            b.Name = "feperiod";

        });

        group.Items.AddEmptyItem(); 
        group.Items.AddEmptyItem();

        group.Items.Add(bt =>
        {
            bt.Name = "btload";
            bt.ShowCaption = DefaultBoolean.True;
            bt.Caption = "";

            bt.NestedExtension().Button(b =>
            {
                b.Name = "cmdloaddata";
                b.Width = Unit.Pixel(100);
                b.Text = "Load";
                b.RouteValues = new { Controller = "Contribution", Action = "EditReceive_Load" };
                b.UseSubmitBehavior = true;

            });

        });




    });

    setting.Items.AddGroupItem(group =>
    {

        group.Name = "secondgroup";
        group.Caption = "Contribution Details";
        group.GroupBoxDecoration = GroupBoxDecoration.Box;
        group.ColSpan = 3;
        group.ColCount = 3;

        group.Items.Add(b => b.fcat).NestedExtension().ComboBox(b =>
        {

            b.Name = "fcat";

            List<PDCTemplate> myprovinces = (List<PDCTemplate>)TempData.Peek("MyEmployerCategories");

            b.Properties.Columns.Add("Code", "Code", Unit.Pixel(50));
            b.Properties.Columns.Add("Name", "Name", Unit.Pixel(200));

            b.Properties.DataSource = myprovinces;
            b.Properties.TextField = "Name";
            b.Properties.ValueField = "Code";

        });

        group.Items.Add(b => b.ftype).NestedExtension().ComboBox(c =>
        {
            c.Name = "ftype";
            c.Properties.Items.Add("Regular", "R");
            c.Properties.Items.Add("Backpay", "B");

            c.Properties.ClientSideEvents.SelectedIndexChanged = "SelectedIndexChanged";
        });


        group.Items.Add(b => b.fmedia).NestedExtension().ComboBox(c =>
        {
            c.Name = "fmedia";
            c.Properties.Items.Add("PrePrinted", "P");
            c.Properties.Items.Add("Diskette", "D");
            c.Properties.Items.Add("Manual", "M");

        });

        group.Items.Add(b => b.fmode).NestedExtension().RadioButtonList(c =>
        {
            c.Name = "fmode";
            c.Properties.Items.Add("Salary", "S");
            c.Properties.Items.Add("Contribution", "C");
        });

        group.Items.Add(b => b.fdate_rec).NestedExtension().DateEdit(c =>
        {
            c.Name = "fdate_rec";

        });

        group.Items.Add(b => b.fscheme).NestedExtension().ComboBox(c =>
        {
            c.Name = "fscheme";

        });


        group.Items.Add(b => b.fbaktype).NestedExtension().RadioButtonList(c =>
        {
            c.Name = "fbaktype";
            c.Properties.Items.Add("Single", "S");
            c.Properties.Items.Add("Bulk", "B");
        });

    });



    setting.Items.AddGroupItem(group =>
    {

        group.Name = "thirdgroup";
        group.Caption = "Period Breakdown";
        group.GroupBoxDecoration = GroupBoxDecoration.Box;
        group.ColSpan = 3;
        group.ColCount = 3;

        group.Items.Add(b => b.fnowkr).NestedExtension().SpinEdit(c =>
        {
            c.Name = "fnowkr";

        });


        group.Items.Add(b => b.ftot_cr).NestedExtension().TextBox(c =>
        {
            c.Name = "ftot_cr";

        });

    });


    setting.Items.AddGroupItem(group =>
    {

        group.Name = "buttongroup";
        group.Caption = "Actions";
        group.GroupBoxDecoration = GroupBoxDecoration.HeadingLine;
        group.ColSpan = 3;
        group.ColCount = 3;


        group.Items.Add(bt =>
        {
            bt.Name = "btgroup";
            bt.ShowCaption = DefaultBoolean.False;

            bt.NestedExtension().Button(b =>
            {
                b.Name = "cmdreset";
                b.Width = Unit.Pixel(100);
                b.Text = "Start New Entry";
                b.RouteValues = new { Controller = "Contribution", Action = "EditReceive" };
                b.UseSubmitBehavior = false;

            });

        });


        group.Items.Add(bt =>
        {
            bt.Name = "btgroup";
            bt.ShowCaption = DefaultBoolean.False;

            bt.NestedExtension().Button(b =>
            {
                b.Name = "cmdcomplete";
                b.Width = Unit.Pixel(100);
                b.Text = "Submit";
                b.RouteValues = new { Controller = "Contribution", Action = "EditReceive_Complete" };
                b.UseSubmitBehavior = true;

            });

        });

    });

}).GetHtml()


    }

@*@Html.DevExpress().PopupControl(setting =>
{
    setting.Name = "breakdownpanel";
    setting.HeaderText = "Cached Contribution Periods";
    setting.ShowOnPageLoad = true;
    setting.CloseOnEscape = true;
    setting.CloseAction = CloseAction.CloseButton;
    //setting.ClientSideEvents.PopUp = "function(s, e) {s.SetWidth(200); s.UpdatePosition(); }";


    setting.SetContent(() =>
    {

        if (TempData.Peek("Periods") != null)
            {

            List<PeriodBreakDownViewModel> plist = (List<PeriodBreakDownViewModel>)TempData.Peek("Periods");

            IEnumerable<PeriodBreakDownViewModel> penum = (IEnumerable<PeriodBreakDownViewModel>)plist;

            @Html.RenderPartial("CachedPeriodBreakdown", penum);

            }

    });

}).GetHtml()*@
